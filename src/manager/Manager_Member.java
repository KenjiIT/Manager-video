/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package manager;

import java.sql.*;
import java.time.LocalDate;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vinhneee
 */
public class Manager_Member extends javax.swing.JFrame {

    /**
     * Creates new form Manager_Member
     */
    public Manager_Member(){
        initComponents();
        scanSQL();
        loadday();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMemID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMemName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMemStatus = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtReturn = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtBorrow = new javax.swing.JTextField();
        Add = new javax.swing.JButton();
        Change = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_ManageMember = new javax.swing.JTable();
        Delete = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtPhonenum = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtAdd = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtIsActive = new javax.swing.JTextField();
        jToggleButton1 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Manage Member");

        jLabel2.setText("Member'ID");

        txtMemID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMemIDKeyTyped(evt);
            }
        });

        jLabel3.setText("Member'Name");

        jLabel4.setText("Status(0: not; 1: rented; 2:Overdue)");

        jLabel5.setText("Return Day (yyyy-mm-dd )");

        jLabel6.setText("Borrow Day (yyyy-mm-dd)");

        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Change.setText("Change");
        Change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeActionPerformed(evt);
            }
        });

        tb_ManageMember.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Member Name", "Status", "Borrow day", "Return Day", "Address", "phone num", "isActive"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tb_ManageMember);
        if (tb_ManageMember.getColumnModel().getColumnCount() > 0) {
            tb_ManageMember.getColumnModel().getColumn(7).setPreferredWidth(15);
        }

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        jLabel7.setText("Phone Num");

        jLabel8.setText("Address");

        txtAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddActionPerformed(evt);
            }
        });

        jLabel9.setText("IsActive(1: yes or 0 :no)");

        txtIsActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIsActiveActionPerformed(evt);
            }
        });

        jToggleButton1.setText("Out");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(101, 101, 101)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(39, 39, 39)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jLabel2)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(21, 21, 21)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(19, 19, 19))
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9))
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtIsActive, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(txtAdd)
                                    .addComponent(txtPhonenum)
                                    .addComponent(txtReturn)
                                    .addComponent(txtMemID, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMemName)
                                    .addComponent(txtMemStatus)
                                    .addComponent(txtBorrow))))
                        .addGap(106, 106, 106)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Add)
                            .addComponent(Change)
                            .addComponent(Delete)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(Add)
                        .addGap(36, 36, 36)
                        .addComponent(Change)
                        .addGap(34, 34, 34)
                        .addComponent(Delete))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtMemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtMemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtMemStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtBorrow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtReturn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPhonenum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIsActive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton1)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 private void scanSQL(){
        try{    
            DBAccess acc = new DBAccess();
            String str = "select* from MembershipCard";
            ResultSet rs = acc.Query(str);
            DefaultTableModel tableModel = (DefaultTableModel)tb_ManageMember.getModel();
            tableModel.setRowCount(0);
            while(rs.next()){
            String id = rs.getString(1);
                String name = rs.getString(2);
                String status = rs.getString(5);
                String StatusT;
                if(Integer.parseInt(status) == 1)
                {
                     StatusT = "Rented";
                }
                else if(Integer.parseInt(status) == 0)
                {
                     StatusT = "not";
                }
                else
                {
                    StatusT = "Overdue";
                }
                String BDate = rs.getString(6);
                String Rdate = rs.getString(7);
                String adress = rs.getString(4);
                String Phone = rs.getString(3);
                String Active = rs.getString(8);
                String ActiveT;
                if(Integer.parseInt(Active) == 1)
                {
                     ActiveT = "yes";
                }
                else
                {
                     ActiveT = "no";
                }
            String[] tb = {id, name, StatusT, BDate, Rdate, adress, Phone, ActiveT};
            tableModel.addRow(tb);   
        }
        }catch(Exception ex){
            
        }
    }
    private void CleanText(){
        txtMemID.setText("");  
        txtMemName.setText("");
        txtMemStatus.setText("");   
        txtAdd.setText("");
        txtPhonenum.setText("");
        txtIsActive.setText("");
    }
     private void loadday(){
         LocalDate date  = LocalDate.now();     
         txtBorrow.setText(date.toString());
     }
    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        int Id = Integer.parseInt(txtMemID.getText());  
            String name = txtMemName.getText();
            int Status = Integer.parseInt(txtMemStatus.getText());        
            String BDate = txtBorrow.getText();
            String RDate = txtReturn.getText();
            String Address = txtPhonenum.getText();
            String Phone = txtAdd.getText();
            int isActive = Integer.parseInt(txtIsActive.getText());
            DBAccess acc = new DBAccess();
            String str = "INSERT INTO MembershipCard (ID_MC,Name, Phone, Address, Status, BorrowDay,ReturnDay, isActive) VALUES ("+Id+",'"+ name+"','"+Phone+"','"+Address+"','"+Status+"','"+BDate+"',null,"+isActive+");";
            acc.Query(str);
            scanSQL();
            CleanText();
    }//GEN-LAST:event_AddActionPerformed

    private void txtAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddActionPerformed

    private void txtMemIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMemIDKeyTyped
        DefaultTableModel tableModel = (DefaultTableModel) tb_ManageMember.getModel();
        tableModel.setRowCount(0);
        String ID = txtMemID.getText();
            try {
            DBAccess acc = new DBAccess();
            ResultSet rs = acc.Query("select* from MembershipCard where ID_MC like '" +ID + "%'" );
            while (rs.next()) {
               String id = rs.getString(1);
                String name = rs.getString(2);
                String status = rs.getString(5);
                String statusT;
                if(Integer.parseInt(status) == 1)
                {
                     statusT = "Rented";
                }
                else
                {
                     statusT = "not";
                }
                String BDate = rs.getString(6);
                String Rdate = rs.getString(7);
                String address = rs.getString(4);
                String Phone = rs.getString(3);
                String Active = rs.getString(8);
                String ActiveT;
                if(Integer.parseInt(Active) == 1)
                {
                     ActiveT = "yes";
                }
                else
                {
                     ActiveT = "no";
                }
                txtMemName.setText(name);
                txtMemStatus.setText(status);
                txtAdd.setText(address);
                txtPhonenum.setText(Phone);
                txtIsActive.setText(Active);
                String[] QQ = {id, name, statusT, BDate, Rdate, address, Phone, ActiveT};
                tableModel.addRow(QQ);
            }
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_txtMemIDKeyTyped

    private void ChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeActionPerformed
        // TODO add your handling code here:\
            String id = txtMemID.getText();
            String name = txtMemName.getText();
            int status = Integer.parseInt(txtMemStatus.getText());         
            String BDate = txtBorrow.getText();            
            String RDate = txtReturn.getText();        
            String Address = txtPhonenum.getText();
            String Phone = txtAdd.getText();
            int Active = Integer.parseInt(txtIsActive.getText());
   
            DBAccess acc = new DBAccess();
            String str = "UPDATE MembershipCard set Name = '"+ name+"',Phone = '"+Phone+"', Address= '"+Address+"', Status = "+status+", BorrowDay='"+BDate+"',ReturnDay= '"+RDate+"', IsActive ="+Active+  "where ID_MC="+id;
            acc.Query(str);      
             if(RDate.equals(""))
             {
                str = "UPDATE MembershipCard set ReturnDay= null where ID_MC="+id;
                acc.Query(str);      
             }
                    
            scanSQL();
            CleanText();
    }//GEN-LAST:event_ChangeActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
            String id = txtMemID.getText();
            DBAccess acc = new DBAccess();
            String str = "DELETE FROM MembershipCard WHERE ID_MC="+id;
            acc.Query(str);
            scanSQL();
            CleanText();
    }//GEN-LAST:event_DeleteActionPerformed

    private void txtIsActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIsActiveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIsActiveActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Manager_Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Manager_Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Manager_Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Manager_Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Manager_Member().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Change;
    private javax.swing.JButton Delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTable tb_ManageMember;
    private javax.swing.JTextField txtAdd;
    private javax.swing.JTextField txtBorrow;
    private javax.swing.JTextField txtIsActive;
    private javax.swing.JTextField txtMemID;
    private javax.swing.JTextField txtMemName;
    private javax.swing.JTextField txtMemStatus;
    private javax.swing.JTextField txtPhonenum;
    private javax.swing.JTextField txtReturn;
    // End of variables declaration//GEN-END:variables
}
